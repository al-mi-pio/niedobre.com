name: Create and publish a Docker image

on:
    push:
        branches:
            - main

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push-image:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Log in to the Container registry
                uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            -   name: Build and push Docker image
                id: push
                uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
                with:
                    context: .
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}


            -   name: Generate artifact attestation
                uses: actions/attest-build-provenance@v2
                with:
                    subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                    subject-digest: ${{ steps.push.outputs.digest }}
                    push-to-registry: true

    pull-image:
        runs-on: ubuntu-latest
        needs: build-and-push-image
        steps:
            -   name: Pull and run image via ssh
                uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USERNAME }}
                    key: ${{ secrets.SSH_KEY }}
                    port: ${{ secrets.SSH_PORT }}
                    script: |
                        docker rm -f Plackarnia 1> /dev/null 2>&1
                        docker run ${{ secrets.CONTAINER_ARGS }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
